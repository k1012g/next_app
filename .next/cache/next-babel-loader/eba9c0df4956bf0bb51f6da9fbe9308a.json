{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nconst initial = {\n  message: 'START',\n  count: 0\n};\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n}\n\n;\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}\n;","map":{"version":3,"sources":["/Users/k1012g/Desktop/React_practice/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,OAAO,GAAG;AACfC,EAAAA,OAAO,EAAE,OADM;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAhB;;AAKA,SAASC,cAAT,CAAyBC,KAAK,GAAGJ,OAAjC,EAA0CK,MAA1C,EAAiD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AACC,aAAO;AACNL,QAAAA,OAAO,EAAE,WADH;AAENC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFf,OAAP;;AAID,SAAK,WAAL;AACC,aAAO;AACND,QAAAA,OAAO,EAAE,WADH;AAENC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFf,OAAP;;AAID,SAAK,OAAL;AACC,aAAO;AACND,QAAAA,OAAO,EAAE,OADH;AAENC,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAFT,OAAP;;AAID;AACC,aAAOE,KAAP;AAjBF;;AAkBC;AACD;;AAAA;AAED,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAAGJ,OAA3B,EAAoC;AAC1C,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAAwBN,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACA;AAAA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst initial = {\n\tmessage: 'START',\n\tcount: 0\n};\n\nfunction counterReducer (state = initial, action){\n\tswitch (action.type) {\n\t\tcase 'INCREMENT':\n\t\t\treturn {\n\t\t\t\tmessage: 'INCREMENT',\n\t\t\t\tcount: state.count + 1\n\t\t\t};\n\t\tcase 'DECREMENT':\n\t\t\treturn {\n\t\t\t\tmessage: 'DECREMENT',\n\t\t\t\tcount: state.count - 1\n\t\t\t};\n\t\tcase 'RESET':\n\t\t\treturn {\n\t\t\t\tmessage: 'RESET',\n\t\t\t\tcount: initial.count\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t};\n};\n\nexport function initStore(state = initial) {\n\treturn createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n};"]},"metadata":{},"sourceType":"module"}